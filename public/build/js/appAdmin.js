document.addEventListener("DOMContentLoaded",(()=>{iniciarApp()}));const iniciarApp=()=>{mostrarAlerta(),mostrarConfirmacionEliminar(),iniciarDatatables("myTable"),cambiarEstadoBotones()},limpiarParametroURL=e=>{const a=new URL(window.location.href);a.searchParams.delete(e),window.history.replaceState({},document.title,a.pathname)},mostrarAlerta=()=>{const e=new URLSearchParams(window.location.search);"1"===e.get("servicio_creado")?Swal.fire({icon:"success",title:"Servicio creado",text:"El nuevo servicio fue registrado correctamente.",confirmButtonText:"OK"}).then((()=>{limpiarParametroURL("servicio_creado")})):"1"===e.get("servicio_actualizado")?Swal.fire({icon:"success",title:"Servicio actualizado",text:"El servicio fue actualizado correctamente.",confirmButtonText:"OK"}).then((()=>{limpiarParametroURL("servicio_actualizado")})):"1"===e.get("servicio_eliminado")?Swal.fire({icon:"success",title:"Servicio eliminado",text:"El servicio fue eliminado correctamente.",confirmButtonText:"OK"}).then((()=>{limpiarParametroURL("servicio_eliminado")})):"1"===e.get("forma_pago_actualizada")&&Swal.fire({icon:"success",title:"Forma de pago actualizada",text:"La forma de pago fue actualizada correctamente.",confirmButtonText:"OK"}).then((()=>{limpiarParametroURL("forma_pago_actualizada")}))},mostrarConfirmacionEliminar=()=>{document.querySelectorAll(".table__formulario").forEach((e=>{e.addEventListener("submit",(function(a){a.preventDefault(),Swal.fire({title:"¿Estás seguro?",text:"¡Esta acción no se puede deshacer!",icon:"warning",showCancelButton:!0,confirmButtonColor:"#d33",cancelButtonColor:"#3085d6",confirmButtonText:"Sí, eliminar",cancelButtonText:"Cancelar"}).then((a=>{a.isConfirmed&&e.submit()}))}))}))},iniciarDatatables=e=>{$(document).ready((function(){$(`#${e}`).DataTable({columns:[{type:"string"},{type:"string"},{type:"string"}],responsive:!0,language:{url:"https://cdn.datatables.net/plug-ins/2.3.0/i18n/es-ES.json",lengthLabels:{"-1":"Todos"}},lengthMenu:[5,10,15,25,30,-1]})}))},cambiarEstadoBotones=()=>{document.querySelectorAll(".btn-toggle-estado").forEach((e=>{e.addEventListener("click",(()=>cambiarEstadoHorarios(e)))}))},cambiarEstadoHorarios=async e=>{const a=e.dataset.id,t="0"===e.dataset.estado?"1":"0";try{const o="/api/horarios/estado",i=new FormData;i.append("id",a),i.append("estado",t);const r=await fetch(o,{method:"POST",body:i}),c=await r.json();if(c.resultado){const a=e.querySelector("i");e.dataset.estado=t,e.textContent="1"===t?"Deshabilitar":"Habilitar",e.classList.toggle("table__accion--deshabilitar","1"===t),e.classList.toggle("table__accion--habilitar","0"===t),e.prepend(a),a.classList.toggle("fa-eye-slash","1"===t),a.classList.toggle("fa-eye","0"===t),Swal.fire({icon:"success",title:"Estado cambiado",text:"El estado del horario fue cambiado correctamente.",confirmButtonText:"OK"})}else Swal.fire({icon:"error",title:"Error al cambiar el estado",text:c.mensaje||"No se pudo cambiar el estado del horario.",confirmButtonText:"OK"})}catch(e){console.log(e),Swal.fire({icon:"error",title:"Error al cambiar el estado",text:"No se pudo cambiar el estado del horario.",confirmButtonText:"OK"})}};